Introduction:
This is a very simple demo API that allows the user to interact with one table in a MySql database.

---------------------------------------------------------------------------------------------------------
Preparation:

This program can only be run on a machine with Java 9 or higher installed.

The program assumes that the user has already set up a MySql database that it can interact with. To configure your
database, open MySql Workbench, or another similar database design tool, and run the following two queries:

1.
    CREATE DATABASE my_database;

2.
    CREATE TABLE my_database.Student (
        id INT(6) UNSIGNED PRIMARY KEY,
        name VARCHAR(50),
        email VARCHAR(50)
    );


It is also possible to bypass step 2 and instead also the program to create the table by going to the 'application.properties'
file and changing the line 'spring.jpa.hibernate.ddl-auto=none' to 'spring.jpa.hibernate.ddl-auto=update'.

---------------------------------------------------------------------------------------------------------
Starting the program:

In order to start the program, the following parameters must be set via the terminal. If the parameters are not defined,
the default values will be used instead.

server.port:                The port which the program should run on.               Default: 8080
spring.datasource.url:      The url of the database                                 Default: jdbc:mysql://localhost:3306/my_databas
spring.datasource.username: A user with correct access rights to the database.      Default: root
spring.datasource.password: password                                                Default: password

Run with maven:
  - Open terminal
  - Navigate to the project root folder, which should be ./Students
  - Execute the following command. Change the parameters if necessary
    mvn spring-boot:run -Dspring-boot.run.arguments=--server.port=8080,--spring.datasource.url=jdbc:mysql://localhost:3306/my_database,--spring.datasource.username=root,--spring.datasource.password=password

Execute with JAR file:
  - Open terminal
  - Navigate to the folder with the JAR file Students-1.0.jar, which should be ./Students
  - Execute the following command. Change the parameters if necessary
    java -jar Students-1.0.jar --server.port=8080 --spring.datasource.url=jdbc:mysql://localhost:3306/my_database --spring.datasource.username=root --spring.datasource.password=password

---------------------------------------------------------------------------------------------------------

Available requests:

POST student:
    Inserts a new student into the database
    URL: POST <host>:<port>/student/post
    Body:
    {
      "id": <id of Student>
      "name": <name of Student>
      "email": <email of Student>
    }
    Example:
        POST localhost:8080/student/
        {
          "id": "3"
          "name": "Henrik"
          "email": "Henrik@gmail.com"
        }

GET student:
    Fetches a student with specified id
    URL: GET <host>:<port>/student/get/<id>
    Example: GET localhost:8080/student/get/3

GET all students:
    Fetches a list of all students
    URL: GET <host>:<port>/student/get/all
    Example: GET localhost:8080/student/get/all

PUT student:
    Updates a student
    URL: PUT <host>:<port>/student/update
    Body:
    {
      "id": <id of Student>
      "name": <name of Student>
      "email": <email of Student>
    }
    Example:
        PUT http://localhost:8080/student/update
        {
          "id": "3"
          "name": "Henrik"
          "email": "Henrik@gmail.com"
        }

DELETE student
    Deletes a student from the database
    URL: DELETE <host>:<port>/student/delete/<id>
    Example: DELETE http://localhost:8080/student/delete/1


---------------------------------------------------------------------------------------------------------